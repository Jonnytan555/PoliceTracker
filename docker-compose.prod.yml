name: police-tracker-prod

services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: police_mssql
    restart: unless-stopped
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Your_password123"   # change in prod
      MSSQL_PID: "Developer"
      TZ: Australia/Brisbane
    ports:
      - "1433:1433"
    volumes:
      - dbdata:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost,1433", "-U", "sa", "-P", "Your_password123", "-C", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  activemq:
    image: apache/activemq-artemis:latest
    container_name: police_activemq
    restart: unless-stopped
    environment:
      ARTEMIS_USER: admin     # change in prod
      ARTEMIS_PASSWORD: admin # change in prod
      ANONYMOUS_LOGIN: "false"
      TZ: Australia/Brisbane
    ports:
      - "61613:61613"   # STOMP
      - "8161:8161"     # Web console
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1:8161 > /dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  producer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: police_producer
    restart: unless-stopped
    env_file: [.env]
    environment:
      TZ: Australia/Brisbane
    depends_on:
      db:
        condition: service_healthy
      activemq:
        condition: service_started
    command: ["python", "-m", "app.scheduler_producer"]

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: police_worker
    restart: unless-stopped
    env_file: [.env]
    environment:
      TZ: Australia/Brisbane
    depends_on:
      db:
        condition: service_healthy
      activemq:
        condition: service_started
    command: ["python", "-m", "app.etl_worker"]

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: police_api
    restart: unless-stopped
    env_file: [.env]
    environment:
      TZ: Australia/Brisbane
    depends_on:
      db:
        condition: service_healthy
    command: ["uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"   # change to "80:8000" if you want http://host/ directly

  mailhog:
    image: mailhog/mailhog
    container_name: police_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  dbdata: {}
